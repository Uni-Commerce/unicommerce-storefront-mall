# 1. IP访问（HTTP）→ 强制跳转到域名HTTPS
server {
  listen 80;
  server_name 47.108.184.243;  # 你的公网IP
  # return 301 https://sys.qntdrtii.com$request_uri;
  root /usr/share/nginx/html;

   # 安全相关头部
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";
  add_header Referrer-Policy "strict-origin-when-cross-origin";

  # 其他配置与IP访问的server块相同
  keepalive_timeout 70;
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  # 错误处理
  error_log /var/log/nginx/error.log;
  error_page  500 502 503 504  /50x.html;

  # 前端Admin路由
  location / {
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  # API代理
  location /api {
    proxy_pass http://qntdrtii_backend:8000;

    # 保留原始头信息
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # 传递Next.js设置的特殊头
    proxy_set_header X-Original-Client-IP $http_x_original_client_ip;
        
    # 如果使用WebSocket需要添加这些
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # 设置真实IP配置（如果需要）
  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;
}

# 2. IP访问（HTTPS）→ 强制跳转到域名HTTPS
server {
  listen 443 ssl;
  server_name 47.108.184.243;  # 你的公网IP

  # SSL证书配置
  ssl_certificate /usr/share/nginx/ssl/sys.qntdrtii.com.pem;
  ssl_certificate_key /usr/share/nginx/ssl/sys.qntdrtii.com.key;
  
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;

  return 301 https://sys.qntdrtii.com$request_uri;
}

# HTTP 服务器块 - 域名访问重定向到HTTPS
server {
  listen 80;
  server_name sys.qntdrtii.com;
  return 301 https://$host$request_uri;
}

# HTTPS 服务器块 - 处理域名访问
server {
  listen 443 ssl;
  server_name sys.qntdrtii.com;
  root /usr/share/nginx/html;

  # SSL证书配置
  ssl_certificate /usr/share/nginx/ssl/sys.qntdrtii.com.pem;
  ssl_certificate_key /usr/share/nginx/ssl/sys.qntdrtii.com.key;
  
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;

  # 安全相关头部
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";
  add_header Referrer-Policy "strict-origin-when-cross-origin";

  # 其他配置与IP访问的server块相同
  keepalive_timeout 70;
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  # 错误处理
  error_log /var/log/nginx/error.log;
  error_page  500 502 503 504  /50x.html;

  # 前端Admin路由
  location / {
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  # API代理
  location /api {
    proxy_pass http://qntdrtii_backend:8000;

    # 保留原始头信息
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # 传递Next.js设置的特殊头
    proxy_set_header X-Original-Client-IP $http_x_original_client_ip;
        
    # 如果使用WebSocket需要添加这些
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
